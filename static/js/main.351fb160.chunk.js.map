{"version":3,"sources":["pages/Pages.module.css","components/Components.module.css","components/Square.tsx","components/Scoreboard.tsx","components/RedLine.tsx","pages/Game.tsx","hooks/hooks-reducer.ts","hooks/useTickTackToe.ts","pages/Start.tsx","pages/Finished.tsx","App.tsx","reportWebVitals.ts","store.ts","index.tsx"],"names":["module","exports","Square","props","index","value","handleClick","Button","style","width","height","color","fontSize","backgroundColor","borderRadius","border","onClick","Scoreboard","scores","useSelector","state","hooks","className","s","scoreboard","RedLine","isFinished","winPosition","styles","zIndex","position","marginTop","marginLeft","transform","every","w","i","Game","board","paper","map","borderLeft","borderBottom","initialState","Array","fill","turn","name","status","players","boardAC","type","ternAC","nameAC","scoresAC","playersAC","statusAC","setScoresTC","dispatch","localStorage","setItem","JSON","stringify","useTickTackToe","useDispatch","useEffect","winningPositions","winningPositionsIndex","winner","boardPositionsToCheck","boardValuesToCkeck","checkingValue","length","isFinishedAC","setTimeout","filter","newBoard","splice","handleRestart","handleStart","Start","handleInput","event","newPlayers","currentTarget","canStart","useMemo","player","handleSubmit","preventDefault","initScores","getItem","parsedScores","parse","Modal","open","onClose","aria-labelledby","aria-describedby","Box","sx","top","left","bgcolor","boxShadow","p","onSubmit","htmlFor","onInput","e","disabled","Finished","point","newScore","App","game","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.351fb160.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"Pages_paper__GwxRV\",\"board\":\"Pages_board__1jHZl\",\"borderLeft\":\"Pages_borderLeft__2v01t\",\"borderBottom\":\"Pages_borderBottom__1HTbN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scoreboard\":\"Components_scoreboard__3Fzj-\"};","import Button from '@mui/material/Button';\r\n\r\ntype SquarePropsType = {\r\n    index: number;\r\n    value: string;\r\n    handleClick(index: number): void;\r\n}\r\nconst Square = (props: SquarePropsType) => {\r\n    const { index, value, handleClick } = props;\r\n    const styles = {\r\n        button: {\r\n            width: \"100px\",\r\n            height: \"100px\",\r\n            color: \"#bdbebd\",\r\n            fontSize: \"90px\",\r\n            backgroundColor: \"#3B445f\",\r\n            borderRadius: \"2px\",\r\n            border: \"none\"\r\n        }\r\n    };\r\n    return (\r\n        <Button style={styles.button} onClick={() => handleClick(index)}>\r\n            {value}\r\n        </Button>\r\n    );\r\n};\r\nexport default Square;","import s from './Components.module.css';\r\nimport { useSelector } from \"react-redux\";\r\nimport type { AppRootStateType } from \"./../store\";\r\n\r\nconst Scoreboard = () => {\r\n    const scores = useSelector<AppRootStateType, number[]>(state => state.hooks.scores);\r\n    return (\r\n        <div className={s.scoreboard}>\r\n            <div>Score</div>\r\n            <div>Player: {scores[0]}</div>\r\n            <div>Player 2: {scores[1]}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scoreboard;","import type { AppRootStateType } from \"./../store\";\r\nimport type { InitialStateFromHooksType } from \"./../hooks/hooks-reducer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst RedLine = () => {\r\n    const {\r\n        isFinished,\r\n        winPosition\r\n    } = useSelector<AppRootStateType, InitialStateFromHooksType>(state => state.hooks);\r\n\r\n    let styles = {\r\n        width: \"0px\",\r\n        height: \"0px\",\r\n        backgroundColor: \"brown\",\r\n        zIndex: \"10\",\r\n        position: \"absolute\",\r\n        borderRadius: \"5px\",\r\n        marginTop: \"0px\",\r\n        marginLeft: \"0px\",\r\n        transform: \"rotate(0deg)\"\r\n    }\r\n    if (isFinished) {\r\n        if (winPosition.every((w, i) => w === [0, 1, 2][i])) {\r\n            styles = { ...styles, width: \"280px\", height: \"10px\", marginTop: \"63px\", marginLeft: \"30px\", }\r\n        } else if (winPosition.every((w, i) => w === [3, 4, 5][i])) {\r\n            styles = { ...styles, width: \"280px\", height: \"10px\", marginTop: \"163px\", marginLeft: \"30px\" }\r\n        } else if (winPosition.every((w, i) => w === [6, 7, 8][i])) {\r\n            styles = { ...styles, width: \"280px\", height: \"10px\", marginTop: \"263px\", marginLeft: \"30px\" }\r\n        } else if (winPosition.every((w, i) => w === [0, 3, 6][i])) {\r\n            styles = { ...styles, width: \"10px\", height: \"280px\", marginTop: \"30px\", marginLeft: \"63px\" }\r\n        } else if (winPosition.every((w, i) => w === [1, 4, 7][i])) {\r\n            styles = { ...styles, width: \"10px\", height: \"280px\", marginTop: \"30px\", marginLeft: \"163px\" }\r\n        } else if (winPosition.every((w, i) => w === [2, 5, 8][i])) {\r\n            styles = { ...styles, width: \"10px\", height: \"280px\", marginTop: \"30px\", marginLeft: \"263px\" }\r\n        } else if (winPosition.every((w, i) => w === [0, 4, 8][i])) {\r\n            styles = { ...styles, width: \"380px\", height: \"10px\", marginTop: \"163px\", marginLeft: \"-17px\", transform: \"rotate(45deg)\" }\r\n        } else if (winPosition.every((w, i) => w === [2, 4, 6][i])) {\r\n            styles = { ...styles, width: \"380px\", height: \"10px\", marginTop: \"163px\", marginLeft: \"-17px\", transform: \"rotate(135deg)\" }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={styles}></div>\r\n    )\r\n}\r\n\r\nexport default RedLine;","import Square from \"../components/Square\";\r\nimport Scorboard from \"./../components/Scoreboard\";\r\nimport s from './Pages.module.css';\r\nimport type { AppRootStateType } from \"./../store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport RedLine from \"./../components/RedLine\";\r\n\r\ntype GamePropsType = {\r\n    handleClick(index: number): void;\r\n}\r\nconst Game = (props: GamePropsType) => {\r\n    const { handleClick } = props;\r\n    const board = useSelector<AppRootStateType, string[]>(state => state.hooks.board);\r\n\r\n    return (\r\n        <div className={s.paper}>\r\n            <div>\r\n                <div className={s.board}>\r\n                    {board.map((value, index) => (\r\n                        <div>\r\n                            <Square\r\n                                key={index}\r\n                                value={value}\r\n                                index={index}\r\n                                handleClick={handleClick}\r\n                            />\r\n                            {index !== 0 && index !== 3 && index !== 6 &&\r\n                                <div className={s.borderLeft}></div>}\r\n                            {index < 6 && <div className={s.borderBottom}></div>}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <RedLine />\r\n            <Scorboard />\r\n        </div>\r\n    );\r\n};\r\nexport default Game;","import { Dispatch } from \"redux\";\r\n\r\nconst initialState: InitialStateFromHooksType = {\r\n    board: Array(9).fill(\"\"),\r\n    turn: \"X\",\r\n    name: \"\",\r\n    status: \"created\",\r\n    scores: [0, 0],\r\n    isFinished: false,\r\n    winPosition: [],\r\n    players: [\"\", \"\"]\r\n}\r\n\r\nexport const hooksReducer = (\r\n    state: InitialStateFromHooksType = initialState,\r\n    action: HooksActionsType): InitialStateFromHooksType => {\r\n    switch (action.type) {\r\n        case 'BOARD':\r\n            return { ...state, board: action.board }\r\n        case 'TURN':\r\n            return { ...state, turn: action.turn }\r\n        case 'NAME':\r\n            return { ...state, name: action.name }\r\n        case 'STATUS':\r\n            return { ...state, status: action.status }\r\n        case 'SCORES':\r\n            return { ...state, scores: action.scores }\r\n        case 'IS-FINISHED':\r\n            return { ...state, isFinished: action.isFinished }\r\n        case 'WIN-POSITION':\r\n            return { ...state, winPosition: action.winPosition }\r\n        case 'PLAYERS':\r\n            return { ...state, players: action.players }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const boardAC = (board: string[]) => ({ type: 'BOARD', board } as const)\r\nexport const ternAC = (turn: \"X\" | \"O\") => ({ type: 'TURN', turn } as const)\r\nexport const nameAC = (name: string) => ({ type: 'NAME', name } as const)\r\nexport const isFinishedAC = (isFinished: boolean) => ({ type: 'IS-FINISHED', isFinished } as const)\r\nexport const scoresAC = (scores: number[]) => ({ type: 'SCORES', scores } as const)\r\nexport const winPositionAC = (winPosition: number[]) => ({ type: 'WIN-POSITION', winPosition } as const)\r\nexport const playersAC = (players: string[]) => ({ type: 'PLAYERS', players } as const)\r\nexport const statusAC = (status: string) => (\r\n    { type: 'STATUS', status } as const)\r\n\r\nexport const setScoresTC = (scores: number[]) => (dispatch: Dispatch<HooksActionsType>) => {\r\n    localStorage.setItem('scores', JSON.stringify(scores));\r\n}\r\n\r\nexport const getScoresTC = () => (dispatch: Dispatch<HooksActionsType>) => {\r\n    let initScores = localStorage.getItem('scores');\r\n    let parsedScores = initScores && JSON.parse(initScores);\r\n    initScores ? dispatch(scoresAC(parsedScores)) : dispatch(scoresAC([0, 0]));\r\n}\r\n\r\nexport type InitialStateFromHooksType = {\r\n    board: string[]\r\n    turn: \"X\" | \"O\"\r\n    name: string | null\r\n    status: string\r\n    scores: number[]\r\n    isFinished: boolean\r\n    winPosition: number[]\r\n    players: string[]\r\n}\r\n\r\nexport type BoardActionType = ReturnType<typeof boardAC>\r\nexport type TurnActionType = ReturnType<typeof ternAC>\r\nexport type NameActionType = ReturnType<typeof nameAC>\r\nexport type StatusActionType = ReturnType<typeof statusAC>\r\nexport type ScoresActionType = ReturnType<typeof scoresAC>\r\nexport type IsFinishedActionType = ReturnType<typeof isFinishedAC>\r\nexport type WinPositionActionType = ReturnType<typeof winPositionAC>\r\nexport type PlayersActionType = ReturnType<typeof playersAC>\r\n\r\n\r\nexport type HooksActionsType =\r\n    | BoardActionType\r\n    | TurnActionType\r\n    | NameActionType\r\n    | StatusActionType\r\n    | ScoresActionType\r\n    | IsFinishedActionType\r\n    | WinPositionActionType\r\n    | PlayersActionType\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport type { AppRootStateType } from \"./../store\";\r\nimport {\r\n    boardAC,\r\n    ternAC,\r\n    nameAC,\r\n    statusAC,\r\n    isFinishedAC,\r\n    winPositionAC,\r\n    playersAC\r\n} from \"./../hooks/hooks-reducer\";\r\nimport type { InitialStateFromHooksType } from \"./../hooks/hooks-reducer\";\r\n\r\ntype ReturnValueType = {\r\n    handleClick: (index: number) => void;\r\n    handleRestart: () => void;\r\n    handleStart: (players: string[]) => void;\r\n}\r\nconst useTickTackToe = (): ReturnValueType => {\r\n    const dispatch = useDispatch();\r\n    let {\r\n        board,\r\n        turn,\r\n        name,\r\n        status,\r\n        players\r\n    } = useSelector<AppRootStateType, InitialStateFromHooksType>(state => state.hooks);\r\n\r\n    useEffect(() => {\r\n        if (status !== \"started\") return;\r\n        const winningPositions = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6]\r\n        ];\r\n        let winningPositionsIndex = 0;\r\n        let winner: string | null = null;\r\n        let isFinished = false;\r\n        let boardPositionsToCheck: number[] = [];\r\n        while (winningPositionsIndex < winningPositions.length && !winner) {\r\n            boardPositionsToCheck = winningPositions[winningPositionsIndex];\r\n            const boardValuesToCkeck = boardPositionsToCheck.map(\r\n                (index) => board[index]\r\n            );\r\n            const checkingValue = boardValuesToCkeck[0];\r\n            isFinished = boardValuesToCkeck.every(\r\n                (value) => value === checkingValue && checkingValue\r\n            );\r\n            winner = !isFinished ? null : checkingValue;\r\n            winningPositionsIndex++;\r\n        }\r\n        dispatch(isFinishedAC(isFinished));\r\n        dispatch(winPositionAC(boardPositionsToCheck));\r\n        if (winner) {\r\n            dispatch(nameAC(winner === \"X\" ? players[0] : players[1]));\r\n            setTimeout(() => {\r\n                dispatch(statusAC(\"finished\"));\r\n            }, 2000)\r\n            return;\r\n        }\r\n        dispatch(statusAC(board.filter((value) => !value).length ? \"started\" : \"finished\"));\r\n    }, [board, players, status, dispatch]);\r\n    const handleClick = (index: number): void => {\r\n        if (index < 0 || index > 9 || name) return;\r\n        const newBoard = [...board];\r\n        newBoard.splice(index, 1, turn);\r\n        dispatch(boardAC(newBoard));\r\n        const newTurn = turn === \"X\" ? \"O\" : \"X\";\r\n        dispatch(ternAC(newTurn));\r\n    };\r\n    const handleStart = (players: string[]) => {\r\n        dispatch(playersAC(players));\r\n        dispatch(ternAC(\"X\"));\r\n        dispatch(statusAC(\"started\"));\r\n    };\r\n    const handleRestart = () => {\r\n        dispatch(boardAC(Array(9).fill(\"\")));\r\n        dispatch(nameAC(\"\"));\r\n        dispatch(statusAC(\"created\"));\r\n        dispatch(playersAC([\"\", \"\"]));\r\n    };\r\n\r\n    return { handleClick, handleRestart, handleStart };\r\n};\r\n\r\nexport default useTickTackToe;","import Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { useMemo, FormEvent } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport type { AppRootStateType } from \"./../store\";\r\nimport { playersAC } from \"./../hooks/hooks-reducer\";\r\nimport { getScoresTC } from \"./../hooks/hooks-reducer\";\r\n\r\ntype StartPropsType = {\r\n    handleStart?(players: string[]): void;\r\n}\r\nconst Start = (props: StartPropsType) => {\r\n    const dispatch = useDispatch();\r\n    const players = useSelector<AppRootStateType, string[]>(state => state.hooks.players);\r\n    const { handleStart } = props;\r\n    const style = {\r\n        position: 'absolute' as 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n    const handleInput = (event: FormEvent<HTMLInputElement>, index: number) => {\r\n        const newPlayers = [...players];\r\n        newPlayers.splice(index, 1, event.currentTarget.value);\r\n        dispatch(playersAC(newPlayers));\r\n    };\r\n    const canStart = useMemo(\r\n        () => players.every((player: string) => player && player.length > 0),\r\n        [players]\r\n    );\r\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        if (!canStart) return;\r\n        handleStart && handleStart(players);\r\n        dispatch(getScoresTC());\r\n    };\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={true}\r\n                onClose={handleSubmit}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\">\r\n                <Box sx={style}>\r\n                    <h1>React Tic Tac Toe</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div>\r\n                            <label htmlFor=\"player1\">Player 1</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={players[0]}\r\n                                onInput={(e) => handleInput(e, 0)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"player2\">Player 2</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={players[1]}\r\n                                onInput={(e) => handleInput(e, 1)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <button type=\"submit\" disabled={players[0] === players[1] || !canStart}>\r\n                                Start\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\nexport default Start;","import Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { useEffect } from 'react';\r\nimport type { AppRootStateType } from \"./../store\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setScoresTC } from \"./../hooks/hooks-reducer\";\r\nimport type { InitialStateFromHooksType } from \"./../hooks/hooks-reducer\";\r\n\r\ntype FinishedPropsType = {\r\n    handleRestart?: () => void;\r\n}\r\nconst Finished = (props: FinishedPropsType) => {\r\n    const { handleRestart } = props;\r\n    const dispatch = useDispatch();\r\n    const {\r\n        scores,\r\n        name,\r\n        players\r\n    } = useSelector<AppRootStateType, InitialStateFromHooksType>(state => state.hooks);\r\n    useEffect(() => {\r\n        let newScore = [...scores]\r\n        let point\r\n        if (name === players[0]) {\r\n            point = scores[0] + 1\r\n            newScore.splice(0, 1, point);\r\n            dispatch(setScoresTC(newScore))\r\n        } else if (name === players[1]) {\r\n            point = scores[1] + 1\r\n            newScore.splice(1, 1, point);\r\n            dispatch(setScoresTC(newScore));\r\n        }\r\n    }, [])\r\n\r\n    const style = {\r\n        position: 'absolute' as 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={true}\r\n                onClose={handleRestart}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\">\r\n                <Box sx={style}>\r\n                    <h1>\r\n                        {name && `Player ${name} won the game`}\r\n                        {!name && \"It's a draw \"}\r\n                    </h1>\r\n                    <button onClick={handleRestart}>Restart</button>\r\n                </Box>\r\n            </Modal>\r\n        </div >\r\n    );\r\n};\r\nexport default Finished;","import Game from \"./pages/Game\";\nimport useTickTackToe from \"./hooks/useTickTackToe\";\nimport Start from \"./pages/Start\";\nimport Finished from \"./pages/Finished\";\nimport { useSelector } from \"react-redux\";\nimport type { AppRootStateType } from \"./store\";\nimport * as React from \"react\";\nconst App = () => {\n    const game = useTickTackToe();\n    const status = useSelector<AppRootStateType, string>(state => state.hooks.status);\n    return (\n        <div>\n            {status === \"created\" && <Start handleStart={game.handleStart} />}\n            {status === \"finished\" && <Finished handleRestart={game.handleRestart} />}\n            {status === \"started\" && <Game handleClick={game.handleClick} />}\n        </div>\n    );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport { hooksReducer } from \"./hooks/hooks-reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers({\r\n    hooks: hooksReducer\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n          <Provider store={store}>\n            <App/>\n        </Provider>\n        </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}